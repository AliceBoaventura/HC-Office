1. Tela Angular:

Componente HTML (dominio.component.html):
<form [formGroup]="dominioForm" (ngSubmit)="onSubmit()">
  <h2>Cadastro de Dominio</h2>

  <label>Nome do Dominio:</label>
  <input formControlName="nomeDominio" />

  <label>Prazo de Vigencia (anos):</label>
  <select formControlName="prazo">
    <option *ngFor="let ano of anos" [value]="ano">{{ ano }}</option>
  </select>

  <label>Fator Gerador:</label>
  <input [value]="fatorGerador" readonly />

  <button type="submit">Salvar</button>
</form>



2.Componente TypeScript (dominio.component.ts):

import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-dominio',
  templateUrl: './dominio.component.html',
})
export class DominioComponent implements OnInit {
  dominioForm: FormGroup;
  anos = Array.from({ length: 10 }, (_, i) => i + 1);
  fatorGerador: string = '';

  constructor(private fb: FormBuilder) {}

  ngOnInit() {
    this.dominioForm = this.fb.group({
      nomeDominio: [''],
      prazo: [1],
    });

    this.dominioForm.get('prazo')?.valueChanges.subscribe(value => {
      this.fatorGerador = this.definirFator(value);
    });
  }

  definirFator(prazo: number): string {
    if (prazo <= 2) return 'Curto Prazo';
    if (prazo <= 5) return 'Medio Prazo';
    return 'Longo Prazo';
  }

  onSubmit() {
    const dados = {
      ...this.dominioForm.value,
      fatorGerador: this.fatorGerador,
    };
    console.log('Dados do Dominio:', dados);
    // Aqui pode chamar um serviÃ§o para salvar no backend
  }
}



