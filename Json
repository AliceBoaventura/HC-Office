import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-dominio',
  templateUrl: './dominio.component.html'
})
export class DominioComponent implements OnInit {
  dominioForm: FormGroup;

  constructor(private fb: FormBuilder) {
    this.dominioForm = this.fb.group({
      idCliente: ['', Validators.required],                   // 1
      dominio: ['', Validators.required],                     // 2
      ticket: ['', Validators.required],                      // 3
      orgaoRegistro: ['', Validators.required],
      situacaoProcesso: ['', Validators.required],            // 4
      dataRegistro: ['', Validators.required],                // 5
      paisRegistro: ['', Validators.required],                // 6
      SACI: ['', Validators.required],                        // 7
      dataVigenciaRegistro: ['', Validators.required],        // 8
      emailContato: ['', [Validators.required, Validators.email]],
      fatorGerador: ['', Validators.required],
      tipoPrazo: ['', Validators.required],
      descricaoPrazo: [''],
      titular: [{ value: '', disabled: true }],
      interessado: [{ value: '', disabled: true }],
      correspondente: [{ value: '', disabled: true }]
    });
  }

  ngOnInit(): void {
    // Simula a replicação dos dados do cadastro de empresa
    const dadosEmpresa = {
      db.nomeDaColecao.createIndex({ titularOrtografado: 1 });
      db.nomeDaColecao.createIndex({ interessadoOrtografado: 1 });
      db.nomeDaColecao.createIndex({ correspondenteOrtografado: 1 });
    };

    this.dominioForm.patchValue({
      titular: dadosEmpresa.titular,
      interessado: dadosEmpresa.interessado,
      correspondente: dadosEmpresa.correspondente
    });
  }

  onSubmit(): void {
    if (this.dominioForm.valid) {
      const dadosDominio = this.dominioForm.getRawValue();
      console.log('Dados a salvar no MongoDB:', dadosDominio);
      // Chamada ao serviço para salvar no MongoDB com referência ao IdCliente
    }
  }
}
